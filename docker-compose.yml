version: "3"
networks:
  ctf:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.32.0.0/16
services:
  db:
    image: mysql:8.0
    networks:
      ctf:
        ipv4_address: 172.32.0.6
    command: --default-authentication-plugin=mysql_native_password
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ocean
      LANG: C.UTF-8
      TZ: ${TZ}
    privileged: true
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
  redis:
    image: redis:latest
    networks:
      ctf:
        ipv4_address: 172.32.0.2
    container_name: redis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
    restart: unless-stopped
    privileged: true
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      TZ: ${TZ}
  web:
    build:
      context: .
      dockerfile: ./install/docker/ocean_web.Dockerfile
    image: ocean_web:v1
    networks:
      ctf:
        ipv4_address: 172.32.0.3
    container_name: web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/ocean_ctf:/opt/ocean_ctf
    depends_on:
      - db
      - redis
    restart: always
    working_dir: /opt/ocean_ctf
    command: "uwsgi --ini uwsgi.ini"
    environment:
      TZ: ${TZ}

  worker:
    build:
      context: .
      dockerfile: ./install/docker/ocean_web.Dockerfile
    image: ocean_web:v1
    networks:
      ctf:
        ipv4_address: 172.32.0.4
    container_name: worker
    depends_on:
      - db
      - redis
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/ocean_ctf:/opt/ocean_ctf
    restart: unless-stopped
    working_dir: /opt/ocean_ctf
    command: celery -A app.worker:celery worker -l debug
    environment:
      TZ: ${TZ}

  beat:
    build:
      context: .
      dockerfile: ./install/docker/ocean_web.Dockerfile
    image: ocean_web:v1
    networks:
      ctf:
        ipv4_address: 172.32.0.5
    container_name: beat
    depends_on:
      - db
      - redis
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/ocean_ctf:/opt/ocean_ctf
    restart: unless-stopped
    working_dir: /opt/ocean_ctf
    command: celery -A app.worker:celery beat
    environment:
      TZ: ${TZ}

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    container_name: nginx
    volumes:
      - /opt/ocean_ctf/install/nginx.conf:/etc/nginx/nginx.conf
      - /opt/ocean_ctf:/opt/ocean_ctf
    environment:
      TZ: ${TZ}
